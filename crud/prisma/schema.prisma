generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ProfileStatus {
  PENDING
  APPROVED
  REJECTED
}

enum WorkStatus {
  ONLINE
  OFFLINE
}

model Driver {
  id             String        @id @default(uuid())
  userId         String        @unique
  fullName       String
  phone          String?
  statusProfile  ProfileStatus @default(PENDING)
  ratingAvg      Float?        @default(0)
  tripsCompleted Int           @default(0)
  isDeleted      Boolean       @default(false)
  deletedAt      DateTime?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt

  vehicles   Vehicle[]
  workStatus DriverWorkStatus?
}

model Vehicle {
  id        String   @id @default(uuid())
  driverId  String
  plateNo   String
  type      String
  brand     String?
  color     String?
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  driver Driver @relation(fields: [driverId], references: [id], onDelete: Cascade)

  @@index([driverId])
}

model DriverWorkStatus {
  driverId    String     @id
  status      WorkStatus @default(OFFLINE)
  capacity    Int?
  serviceArea String?
  vehicleType String?
  updatedAt   DateTime   @updatedAt

  driver Driver @relation(fields: [driverId], references: [id], onDelete: Cascade)
}
